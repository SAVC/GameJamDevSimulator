init python:
    from typing import List
    from enum import Enum
    import random

    # Базовый класс характеристик
    class State:
        def __init__(self, despair, energy, readiness, probability_of_bugs, team_cohesion):
            self.despair = despair
            self.energy = energy
            self.readiness = readiness
            self.probability_of_bugs = probability_of_bugs
            self.team_cohesion = team_cohesion
            self.clamp()  # Вызываем clamp при инициализации

        def apply(self, increment: 'State'):
            self.despair += increment.despair
            self.energy += increment.energy
            self.readiness += increment.readiness
            self.probability_of_bugs += increment.probability_of_bugs
            self.team_cohesion += increment.team_cohesion
            self.clamp()  # Вызываем clamp после применения изменений

        def clamp(self):
            # Ограничиваем значения характеристик
            self.despair = max(0, min(100, self.despair))
            self.energy = max(0, min(100, self.energy))
            self.readiness = max(0, min(100, self.readiness))
            self.probability_of_bugs = max(0, min(100, self.probability_of_bugs))
            self.team_cohesion = max(0, min(100, self.team_cohesion))

    # Объект ответа на любое действие
    class Action:
        def __init__(self, name, effect, increment: State):
            self.name = name
            self.effect = effect
            self.increment = increment

    # Событие
    class Event:
        def __init__(self, event_name, actions: List[Action]):
            self.event_name = event_name
            self.actions = actions

    # Персонаж
    class Character:
        def __init__(self, name, avatar, position, events: List[Event]):
            self.name = name
            self.avatar = avatar
            self.position = position  # "left", "right" или "center"
            self.events = events

    # Создание персонажей и их событий
    characters = [
        Character("Цезарь", "cesar_avatar", "left", [
            Event("Цезарь предлагает новый подход", [
                Action("Поддержать её идею", "Цезарь рада вашей поддержке. Сплоченность команды увеличивается. (Сплоченность +10)", State(0, 0, 0, 0, 10)),
                Action("Отклонить её предложение", "Цезарь расстроена. Сплоченность команды уменьшается. (Сплоченность -5)", State(0, 0, 0, 0, -5)),
                Action("Предложить альтернативу", "Цезарь заинтересована вашей идеей. Готовность увеличивается. (Готовность +5)", State(0, 0, 5, 0, 0)),
                Action("Обсудить с командой", "Вы провели продуктивное обсуждение. Готовность и сплоченность увеличиваются. (Готовность +5, Сплоченность +5)", State(0, 0, 5, 0, 5))
            ]),
            Event("Цезарь просит помощи с отчётом", [
                Action("Предложить помощь", "Цезарь благодарна за помощь. Готовность увеличивается. (Готовность +10)", State(0, 0, 10, 0, 0)),
                Action("Сказать, что занят", "Цезарь понимает, но немного расстроена. Сплоченность команды уменьшается. (Сплоченность -5)", State(0, 0, 0, 0, -5)),
                Action("Предложить помощь позже", "Цезарь довольна, что вы готовы помочь позже. Энергия увеличивается. (Энергия +5)", State(5, 0, 0, 0, 0)),
                Action("Обсудить с командой", "Вы решили обсудить с командой, кто может помочь. Сплоченность увеличивается. (Сплоченность +5)", State(0, 0, 0, 0, 5))
            ]),
            Event("Цезарь предлагает сделать перерыв на мемы", [
                Action("Согласиться", "Все смеются над мемами. Энергия увеличивается. (Энергия +10)", State(10, 0, 0, 0, 0)),
                Action("Отказаться", "Цезарь грустит, но продолжает работать. Сплоченность команды уменьшается. (Сплоченность -5)", State(0, 0, 0, 0, -5)),
                Action("Предложить короткий перерыв", "Цезарь соглашается на короткий перерыв. Энергия увеличивается. (Энергия +5)", State(5, 0, 0, 0, 0)),
                Action("Обсудить с командой", "Вы решили обсудить с командой, нужен ли перерыв. Сплоченность увеличивается. (Сплоченность +5)", State(0, 0, 0, 0, 5))
            ]),
            Event("Цезарь предлагает сделать игру про кексы", [
                Action("Согласиться", "Все смеются, но готовность уменьшается. Отчаяние увеличивается. (Готовность -10, Отчаяние +10)", State(10, 0, 0, 0, 10)),
                Action("Отказаться", "Цезарь понимает, но немного расстроена. Сплоченность команды уменьшается. (Сплоченность -5)", State(0, 0, 0, 0, -5)),
                Action("Предложить компромисс", "Цезарь соглашается на компромисс. Готовность и сплоченность увеличиваются. (Готовность +5, Сплоченность +5)", State(0, 0, 5, 0, 5)),
                Action("Обсудить с командой", "Вы решили обсудить с командой, стоит ли делать игру про кексы. Сплоченность увеличивается. (Сплоченность +5)", State(0, 0, 0, 0, 5))
            ]),
            Event("Цезарь предлагает обсудить новые идеи", [
                Action("Согласиться", "Вы провели продуктивное обсуждение. Готовность увеличивается. (Готовность +10)", State(0, 0, 10, 0, 0)),
                Action("Отказаться", "Цезарь расстроена. Сплоченность команды уменьшается. (Сплоченность -5)", State(0, 0, 0, 0, -5)),
                Action("Предложить свою идею", "Цезарь заинтересована вашей идеей. Готовность увеличивается. (Готовность +5)", State(0, 0, 5, 0, 0)),
                Action("Обсудить с командой", "Вы решили обсудить с командой новые идеи. Сплоченность увеличивается. (Сплоченность +5)", State(0, 0, 0, 0, 5))
            ]),
            Event("Цезарь предлагает сделать игру про котиков", [
                Action("Согласиться", "Все смеются, но готовность уменьшается. Отчаяние увеличивается. (Готовность -10, Отчаяние +10)", State(10, 0, 0, 0, 10)),
                Action("Отказаться", "Цезарь понимает, но немного расстроена. Сплоченность команды уменьшается. (Сплоченность -5)", State(0, 0, 0, 0, -5)),
                Action("Предложить компромисс", "Цезарь соглашается на компромисс. Готовность и сплоченность увеличиваются. (Готовность +5, Сплоченность +5)", State(0, 0, 5, 0, 5)),
                Action("Обсудить с командой", "Вы решили обсудить с командой, стоит ли делать игру про котиков. Сплоченность увеличивается. (Сплоченность +5)", State(0, 0, 0, 0, 5))
            ]),
        ]),
        Character("Васян", "vasan_avatar", "left", [
            Event("Васян хочет обсудить проблему", [
                Action("Принять участие в обсуждении", "Вы провели продуктивное обсуждение. Готовность увеличивается. (Готовность +10)", State(0, 0, 10, 0, 0)),
                Action("Избегать обсуждения", "Васян чувствует себя игнорируемым. Сплоченность команды уменьшается. (Сплоченность -5)", State(0, 0, 0, 0, -5)),
                Action("Предложить своё решение", "Васян заинтересован вашим решением. Готовность увеличивается. (Готовность +5)", State(0, 0, 5, 0, 0)),
                Action("Обсудить с командой", "Вы решили обсудить с командой проблему. Сплоченность увеличивается. (Сплоченность +5)", State(0, 0, 0, 0, 5))
            ]),
            Event("Васян нуждается в отдыхе", [
                Action("Предложить короткий перерыв", "Васян ценит ваше предложение. Энергия увеличивается. (Энергия +10)", State(10, 0, 0, 0, 0)),
                Action("Сказать продолжать работать", "Васян чувствует стресс. Отчаяние увеличивается. (Отчаяние +10)", State(10, 0, 0, 0, 0)),
                Action("Предложить помощь", "Васян благодарен за помощь. Готовность увеличивается. (Готовность +5)", State(0, 0, 5, 0, 0)),
                Action("Обсудить с командой", "Вы решили обсудить с командой, нужен ли Васяну отдых. Сплоченность увеличивается. (Сплоченность +5)", State(0, 0, 0, 0, 5))
            ]),
            Event("Васян предлагает обсудить сериалы", [
                Action("Согласиться", "Все отвлекаются и расслабляются. Энергия увеличивается, но готовность уменьшается. (Энергия +10, Готовность -5)", State(10, 0, -5, 0, 0)),
                Action("Отказаться", "Васян грустит, но продолжает работать. Сплоченность команды уменьшается. (Сплоченность -5)", State(0, 0, 0, 0, -5)),
                Action("Предложить обсудить позже", "Васян соглашается обсудить сериалы позже. Энергия увеличивается. (Энергия +5)", State(5, 0, 0, 0, 0)),
                Action("Обсудить с командой", "Вы решили обсудить с командой, стоит ли обсуждать сериалы. Сплоченность увеличивается. (Сплоченность +5)", State(0, 0, 0, 0, 5))
            ]),
            Event("Васян предлагает сделать игру про новеллу", [
                Action("Согласиться", "Все смеются, но готовность уменьшается. Отчаяние увеличивается. (Готовность -10, Отчаяние +10)", State(10, 0, 0, 0, 10)),
                Action("Отказаться", "Васян понимает, но немного расстроен. Сплоченность команды уменьшается. (Сплоченность -5)", State(0, 0, 0, 0, -5)),
                Action("Предложить компромисс", "Васян соглашается на компромисс. Готовность и сплоченность увеличиваются. (Готовность +5, Сплоченность +5)", State(0, 0, 5, 0, 5)),
                Action("Обсудить с командой", "Вы решили обсудить с командой, стоит ли делать игру про новеллу. Сплоченность увеличивается. (Сплоченность +5)", State(0, 0, 0, 0, 5))
            ]),
            Event("Васян предлагает обсудить новые идеи", [
                Action("Согласиться", "Вы провели продуктивное обсуждение. Готовность увеличивается. (Готовность +10)", State(0, 0, 10, 0, 0)),
                Action("Отказаться", "Васян расстроен. Сплоченность команды уменьшается. (Сплоченность -5)", State(0, 0, 0, 0, -5)),
                Action("Предложить свою идею", "Васян заинтересован вашей идеей. Готовность увеличивается. (Готовность +5)", State(0, 0, 5, 0, 0)),
                Action("Обсудить с командой", "Вы решили обсудить с командой новые идеи. Сплоченность увеличивается. (Сплоченность +5)", State(0, 0, 0, 0, 5))
            ]),
            Event("Васян предлагает сделать игру про тостеры", [
                Action("Согласиться", "Все смеются, но готовность уменьшается. Отчаяние увеличивается. (Готовность -10, Отчаяние +10)", State(10, 0, 0, 0, -10)),
                Action("Отказаться", "Васян понимает, но немного расстроен. Сплоченность команды уменьшается. (Сплоченность -5)", State(0, 0, 0, 0, -5)),
                Action("Предложить компромисс", "Васян соглашается на компромисс. Готовность и сплоченность увеличиваются. (Готовность +5, Сплоченность +5)", State(0, 0, 5, 0, 5)),
                Action("Обсудить с командой", "Вы решили обсудить с командой, стоит ли делать игру про тостеры. Сплоченность увеличивается. (Сплоченность +5)", State(0, 0, 0, 0, 5))
            ]),
        ]),
        Character("Chara", "chara_avatar", "left", [
            Event("Chara предлагает улучшить процесс", [
                Action("Согласиться с предложением", "Chara рада вашей поддержке. Сплоченность команды увеличивается. (Сплоченность +10)", State(0, 0, 0, 0, 10)),
                Action("Отклонить предложение", "Chara расстроена. Сплоченность команды уменьшается. (Сплоченность -5)", State(0, 0, 0, 0, -5)),
                Action("Предложить альтернативу", "Chara заинтересована вашей идеей. Готовность увеличивается. (Готовность +5)", State(0, 0, 5, 0, 0)),
                Action("Обсудить с командой", "Вы решили обсудить с командой, как улучшить процесс. Сплоченность увеличивается. (Сплоченность +5)", State(0, 0, 0, 0, 5))
            ]),
            Event("Chara просит помощи с задачей", [
                Action("Предложить помощь", "Chara благодарна за помощь. Готовность увеличивается. (Готовность +10)", State(0, 0, 10, 0, 0)),
                Action("Сказать, что занят", "Chara понимает, но немного расстроена. Сплоченность команды уменьшается. (Сплоченность -5)", State(0, 0, 0, 0, -5)),
                Action("Предложить помощь позже", "Chara довольна, что вы готовы помочь позже. Энергия увеличивается. (Энергия +5)", State(5, 0, 0, 0, 0)),
                Action("Обсудить с командой", "Вы решили обсудить с командой, кто может помочь. Сплоченность увеличивается. (Сплоченность +5)", State(0, 0, 0, 0, 5))
            ]),
            Event("Chara предлагает сделать перерыв на шутки", [
                Action("Согласиться", "Все смеются и расслабляются. Энергия увеличивается. (Энергия +10)", State(10, 0, 0, 0, 0)),
                Action("Отказаться", "Chara грустит, но продолжает работать. Сплоченность команды уменьшается. (Сплоченность -5)", State(0, 0, 0, 0, -5)),
                Action("Предложить короткий перерыв", "Chara соглашается на короткий перерыв. Энергия увеличивается. (Энергия +5)", State(5, 0, 0, 0, 0)),
                Action("Обсудить с командой", "Вы решили обсудить с командой, нужен ли перерыв. Сплоченность увеличивается. (Сплоченность +5)", State(0, 0, 0, 0, 5))
            ]),
            Event("Chara предлагает сделать игру про носки", [
                Action("Согласиться", "Все смеются, но готовность уменьшается. Отчаяние увеличивается. (Готовность -10, Отчаяние +10)", State(10, 0, 0, 0, -10)),
                Action("Отказаться", "Chara понимает, но немного расстроена. Сплоченность команды уменьшается. (Сплоченность -5)", State(0, 0, 0, 0, -5)),
                Action("Предложить компромисс", "Chara соглашается на компромисс. Готовность и сплоченность увеличиваются. (Готовность +5, Сплоченность +5)", State(0, 0, 5, 0, 5)),
                Action("Обсудить с командой", "Вы решили обсудить с командой, стоит ли делать игру про носки. Сплоченность увеличивается. (Сплоченность +5)", State(0, 0, 0, 0, 5))
            ]),
            Event("Chara предлагает обсудить новые идеи", [
                Action("Согласиться", "Вы провели продуктивное обсуждение. Готовность увеличивается. (Готовность +10)", State(0, 0, 10, 0, 0)),
                Action("Отказаться", "Chara расстроена. Сплоченность команды уменьшается. (Сплоченность -5)", State(0, 0, 0, 0, -5)),
                Action("Предложить свою идею", "Chara заинтересована вашей идеей. Готовность увеличивается. (Готовность +5)", State(0, 0, 5, 0, 0)),
                Action("Обсудить с командой", "Вы решили обсудить с командой новые идеи. Сплоченность увеличивается. (Сплоченность +5)", State(0, 0, 0, 0, 5))
            ]),
            Event("Chara предлагает сделать игру про котиков", [
                Action("Согласиться", "Все смеются, но готовность уменьшается. Отчаяние увеличивается. (Готовность -10, Отчаяние +10)", State(10, 0, 0, 0, -10)),
                Action("Отказаться", "Chara понимает, но немного расстроена. Сплоченность команды уменьшается. (Сплоченность -5)", State(0, 0, 0, 0, -5)),
                Action("Предложить компромисс", "Chara соглашается на компромисс. Готовность и сплоченность увеличиваются. (Готовность +5, Сплоченность +5)", State(0, 0, 5, 0, 5)),
                Action("Обсудить с командой", "Вы решили обсудить с командой, стоит ли делать игру про котиков. Сплоченность увеличивается. (Сплоченность +5)", State(0, 0, 0, 0, 5))
            ]),
        ]),
        Character("Дмитрий", "dmitry_avatar", "left", [
            Event("Дмитрий хочет обсудить план", [
                Action("Принять участие в обсуждении", "Вы провели продуктивное обсуждение. Готовность увеличивается. (Готовность +10)", State(0, 0, 10, 0, 0)),
                Action("Избегать обсуждения", "Дмитрий чувствует себя игнорируемым. Сплоченность команды уменьшается. (Сплоченность -5)", State(0, 0, 0, 0, -5)),
                Action("Предложить своё решение", "Дмитрий заинтересован вашим решением. Готовность увеличивается. (Готовность +5)", State(0, 0, 5, 0, 0)),
                Action("Обсудить с командой", "Вы решили обсудить с командой план. Сплоченность увеличивается. (Сплоченность +5)", State(0, 0, 0, 0, 5))
            ]),
            Event("Дмитрий нуждается в помощи с багом", [
                Action("Предложить помощь", "Дмитрий благодарен за помощь. Сплоченность команды увеличивается. (Сплоченность +10)", State(0, 0, 0, 0, 10)),
                Action("Сказать, что занят", "Дмитрий понимает, но немного расстроен. Сплоченность команды уменьшается. (Сплоченность -5)", State(0, 0, 0, 0, -5)),
                Action("Предложить помощь позже", "Дмитрий доволен, что вы готовы помочь позже. Энергия увеличивается. (Энергия +5)", State(5, 0, 0, 0, 0)),
                Action("Обсудить с командой", "Вы решили обсудить с командой, кто может помочь. Сплоченность увеличивается. (Сплоченность +5)", State(0, 0, 0, 0, 5))
            ]),
            Event("Дмитрий предлагает обсудить мемы", [
                Action("Согласиться", "Все смеются и расслабляются. Энергия увеличивается. (Энергия +10)", State(10, 0, 0, 0, 0)),
                Action("Отказаться", "Дмитрий грустит, но продолжает работать. Сплоченность команды уменьшается. (Сплоченность -5)", State(0, 0, 0, 0, -5)),
                Action("Предложить обсудить позже", "Дмитрий соглашается обсудить мемы позже. Энергия увеличивается. (Энергия +5)", State(5, 0, 0, 0, 0)),
                Action("Обсудить с командой", "Вы решили обсудить с командой, стоит ли обсуждать мемы. Сплоченность увеличивается. (Сплоченность +5)", State(0, 0, 0, 0, 5))
            ]),
            Event("Дмитрий предлагает сделать игру про тостеры", [
                Action("Согласиться", "Все смеются, но готовность уменьшается. Отчаяние увеличивается. (Готовность -10, Отчаяние +10)", State(10, 0, 0, 0, -10)),
                Action("Отказаться", "Дмитрий понимает, но немного расстроен. Сплоченность команды уменьшается. (Сплоченность -5)", State(0, 0, 0, 0, -5)),
                Action("Предложить компромисс", "Дмитрий соглашается на компромисс. Готовность и сплоченность увеличиваются. (Готовность +5, Сплоченность +5)", State(0, 0, 5, 0, 5)),
                Action("Обсудить с командой", "Вы решили обсудить с командой, стоит ли делать игру про тостеры. Сплоченность увеличивается. (Сплоченность +5)", State(0, 0, 0, 0, 5))
            ]),
            Event("Дмитрий предлагает обсудить новые идеи", [
                Action("Согласиться", "Вы провели продуктивное обсуждение. Готовность увеличивается. (Готовность +10)", State(0, 0, 10, 0, 0)),
                Action("Отказаться", "Дмитрий расстроен. Сплоченность команды уменьшается. (Сплоченность -5)", State(0, 0, 0, 0, -5)),
                Action("Предложить свою идею", "Дмитрий заинтересован вашей идеей. Готовность увеличивается. (Готовность +5)", State(0, 0, 5, 0, 0)),
                Action("Обсудить с командой", "Вы решили обсудить с командой новые идеи. Сплоченность увеличивается. (Сплоченность +5)", State(0, 0, 0, 0, 5))
            ]),
            Event("Дмитрий предлагает сделать игру про котиков", [
                Action("Согласиться", "Все смеются, но готовность уменьшается. Отчаяние увеличивается. (Готовность -10, Отчаяние +10)", State(10, 0, 0, 0, -10)),
                Action("Отказаться", "Дмитрий понимает, но немного расстроен. Сплоченность команды уменьшается. (Сплоченность -5)", State(0, 0, 0, 0, -5)),
                Action("Предложить компромисс", "Дмитрий соглашается на компромисс. Готовность и сплоченность увеличиваются. (Готовность +5, Сплоченность +5)", State(0, 0, 5, 0, 5)),
                Action("Обсудить с командой", "Вы решили обсудить с командой, стоит ли делать игру про котиков. Сплоченность увеличивается. (Сплоченность +5)", State(0, 0, 0, 0, 5))
            ]),
        ]),
        Character("JaysMitty", "jaysmitty_avatar", "left", [
            Event("JaysMitty предлагает новую идею", [
                Action("Поддержать идею", "JaysMitty рад вашей поддержке. Сплоченность команды увеличивается. (Сплоченность +10)", State(0, 0, 0, 0, 10)),
                Action("Отклонить идею", "JaysMitty расстроен. Сплоченность команды уменьшается. (Сплоченность -5)", State(0, 0, 0, 0, -5)),
                Action("Предложить альтернативу", "JaysMitty заинтересован вашей идеей. Готовность увеличивается. (Готовность +5)", State(0, 0, 5, 0, 0)),
                Action("Обсудить с командой", "Вы решили обсудить с командой новую идею. Сплоченность увеличивается. (Сплоченность +5)", State(0, 0, 0, 0, 5))
            ]),
            Event("JaysMitty просит помощи с задачей", [
                Action("Предложить помощь", "JaysMitty благодарен за помощь. Готовность увеличивается. (Готовность +10)", State(0, 0, 10, 0, 0)),
                Action("Сказать, что занят", "JaysMitty понимает, но немного расстроен. Сплоченность команды уменьшается. (Сплоченность -5)", State(0, 0, 0, 0, -5)),
                Action("Предложить помощь позже", "JaysMitty доволен, что вы готовы помочь позже. Энергия увеличивается. (Энергия +5)", State(5, 0, 0, 0, 0)),
                Action("Обсудить с командой", "Вы решили обсудить с командой, кто может помочь. Сплоченность увеличивается. (Сплоченность +5)", State(0, 0, 0, 0, 5))
            ]),
            Event("JaysMitty предлагает сделать перерыв на анекдоты", [
                Action("Согласиться", "Все смеются и расслабляются. Энергия увеличивается. (Энергия +10)", State(10, 0, 0, 0, 0)),
                Action("Отказаться", "JaysMitty грустит, но продолжает работать. Сплоченность команды уменьшается. (Сплоченность -5)", State(0, 0, 0, 0, -5)),
                Action("Предложить короткий перерыв", "JaysMitty соглашается на короткий перерыв. Энергия увеличивается. (Энергия +5)", State(5, 0, 0, 0, 0)),
                Action("Обсудить с командой", "Вы решили обсудить с командой, нужен ли перерыв. Сплоченность увеличивается. (Сплоченность +5)", State(0, 0, 0, 0, 5))
            ]),
            Event("JaysMitty предлагает сделать игру про холодильники", [
                Action("Согласиться", "Все смеются, но готовность уменьшается. Отчаяние увеличивается. (Готовность -10, Отчаяние +10)", State(10, 0, 0, 0, -10)),
                Action("Отказаться", "JaysMitty понимает, но немного расстроен. Сплоченность команды уменьшается. (Сплоченность -5)", State(0, 0, 0, 0, -5)),
                Action("Предложить компромисс", "JaysMitty соглашается на компромисс. Готовность и сплоченность увеличиваются. (Готовность +5, Сплоченность +5)", State(0, 0, 5, 0, 5)),
                Action("Обсудить с командой", "Вы решили обсудить с командой, стоит ли делать игру про холодильники. Сплоченность увеличивается. (Сплоченность +5)", State(0, 0, 0, 0, 5))
            ]),
            Event("JaysMitty предлагает обсудить новые идеи", [
                Action("Согласиться", "Вы провели продуктивное обсуждение. Готовность увеличивается. (Готовность +10)", State(0, 0, 10, 0, 0)),
                Action("Отказаться", "JaysMitty расстроен. Сплоченность команды уменьшается. (Сплоченность -5)", State(0, 0, 0, 0, -5)),
                Action("Предложить свою идею", "JaysMitty заинтересован вашей идеей. Готовность увеличивается. (Готовность +5)", State(0, 0, 5, 0, 0)),
                Action("Обсудить с командой", "Вы решили обсудить с командой новые идеи. Сплоченность увеличивается. (Сплоченность +5)", State(0, 0, 0, 0, 5))
            ]),
            Event("JaysMitty предлагает сделать игру про котиков", [
                Action("Согласиться", "Все смеются, но готовность уменьшается. Отчаяние увеличивается. (Готовность -10, Отчаяние +10)", State(10, 0, 0, 0, -10)),
                Action("Отказаться", "JaysMitty понимает, но немного расстроен. Сплоченность команды уменьшается. (Сплоченность -5)", State(0, 0, 0, 0, -5)),
                Action("Предложить компромисс", "JaysMitty соглашается на компромисс. Готовность и сплоченность увеличиваются. (Готовность +5, Сплоченность +5)", State(0, 0, 5, 0, 5)),
                Action("Обсудить с командой", "Вы решили обсудить с командой, стоит ли делать игру про котиков. Сплоченность увеличивается. (Сплоченность +5)", State(0, 0, 0, 0, 5))
            ]),
        ])
    ]

    # Функция для получения случайного персонажа и события
    def get_random_character_event() -> (Character, Event):
        character = random.choice(characters)
        event = random.choice(character.events)
        return character, event

    # Функция для вычисления вероятности
    def percent_chance(percent: int) -> bool:
        """Возвращает True с вероятностью percent% (1-100)"""
        return random.randint(1, 100) <= percent

    # Функция для получения события по типу
    def getEventType(buffAppears, debuffAppears) -> EventType:
        event = None
        if(buffAppears and not debuffAppears):
            event = EventType.BUFF
        if(debuffAppears and not buffAppears):
            event = EventType.DEBUFF
        if(buffAppears and debuffAppears):
            if(state.team_cohesion >= state.probability_of_bugs):
                event = EventType.BUFF
            else:
                event = EventType.DEBUFF
        return event

    # Типы событий
    class EventType(str, Enum):
        BUFF = "buff"
        DEBUFF = "debuff"

    # Базовый класс событий
    class Events:
        def __init__(self):
            self.buff = [
                Event("Вдохновение из ниоткуда", [
                    Action("Использовать вдохновение для механики", "Ты посмотрел на ложку и понял, что можно добавить механику с телепортацией еды. (Готовность +15, Сплоченность +5)", State(0, 0, 15, 0, 5)),
                    Action("Сохранить идею на потом", "Ты решил, что ложка может подождать, и записал идею в блокнот. (Готовность +5)", State(0, 0, 5, 0, 0)),
                    Action("Поделиться с командой", "Ты рассказал команде, что ложка вдохновила тебя на новую механику, и все засмеялись. (Готовность +10, Сплоченность +10)", State(0, 0, 10, 0, 10)),
                    Action("Отказаться от идеи", "Ты решил, что ложка — это просто ложка, и вернулся к работе. (Отчаяние -5)", State(0, 0, 0, 0, -5))
                ]),
                Event("Судья лайкнул твой пост в Твиттере", [
                    Action("Написать ещё пост", "Ты написал ещё один пост, чтобы закрепить успех. (Отчаяние -10, Сплоченность +5)", State(-10, 0, 0, 0, 5)),
                    Action("Сосредоточиться на работе", "Ты решил, что лайк — это хорошо, но работа важнее. (Готовность +5)", State(0, 0, 5, 0, 0)),
                    Action("Ответить судье", "Ты написал судье спасибо и получил ещё один лайк. (Отчаяние -5, Сплоченность +10)", State(-5, 0, 0, 0, 10)),
                    Action("Игнорировать лайк", "Ты решил, что лайк — это просто лайк, и продолжил работать. (Отчаяние -2)", State(-2, 0, 0, 0, 0))
                ]),
                Event("Старый прототип оказался полезным", [
                    Action("Интегрировать прототип", "Ты внедрил старый прототип и удивился, как он хорошо работает. (Готовность +10, Вероятность багов -5)", State(0, 0, 10, -5, 0)),
                    Action("Изучить прототип", "Ты решил разобраться, как работает старый прототип. (Готовность +5, Вероятность багов -2)", State(0, 0, 5, -2, 0)),
                    Action("Показать команде", "Ты показал команде старый прототип, и все были в восторге. (Готовность +8, Сплоченность +5)", State(0, 0, 8, 0, 5)),
                    Action("Не использовать прототип", "Ты решил, что старый прототип лучше оставить в прошлом. (Вероятность багов -3)", State(0, 0, 0, -3, 0))
                ]),
                Event("Прототип заработал неожиданно", [
                    Action("Продолжить работу с прототипом", "Ты продолжил работать с прототипом, хотя и не понимаешь, как он работает. (Отчаяние -10, Готовность +20)", State(-10, 0, 20, 0, 0)),
                    Action("Изучить, как это работает", "Ты решил разобраться, как прототип заработал, и нашёл несколько ошибок. (Отчаяние -5, Готовность +10, Вероятность багов -5)", State(-5, 0, 10, -5, 0)),
                    Action("Поделиться с командой", "Ты поделился с командой, что прототип заработал, и все были в шоке. (Готовность +15, Сплоченность +10)", State(0, 0, 15, 0, 10)),
                    Action("Не трогать прототип", "Ты решил не трогать прототип, чтобы не сглазить. (Отчаяние -5)", State(-5, 0, 0, 0, 0))
                ]),
                Event("Озарение!", [
                    Action("Переделать проект", "Ты переделал проект, следуя новому озарению, и всё стало на свои места. (Готовность +15, Вероятность багов -10)", State(0, 0, 15, -10, 0)),
                    Action("Записать идею", "Ты записал идею, чтобы не забыть её потом. (Готовность +5, Вероятность багов -3)", State(0, 0, 5, -3, 0)),
                    Action("Обсудить с командой", "Ты обсудил озарение с командой, и все согласились, что это гениально. (Готовность +10, Сплоченность +5)", State(0, 0, 10, 0, 5)),
                    Action("Игнорировать озарение", "Ты решил, что озарение — это просто усталость, и продолжил работать. (Отчаяние -2)", State(-2, 0, 0, 0, 0))
                ]),
                Event("Кто-то поделился куском кода", [
                    Action("Использовать код", "Ты использовал код из комментариев, хотя и не понимаешь, как он работает. (Готовность +12, Вероятность багов -2)", State(0, 0, 12, 0, -2)),
                    Action("Изучить код", "Ты решил разобраться, как работает код из комментариев. (Готовность +8, Вероятность багов -5)", State(0, 0, 8, -5, 0)),
                    Action("Показать команде", "Ты показал команде код из комментариев, и все были удивлены. (Готовность +10, Сплоченность +5)", State(0, 0, 10, 0, 5)),
                    Action("Не использовать код", "Ты решил, что код из комментариев лучше не использовать. (Вероятность багов -3)", State(0, 0, 0, -3, 0))
                ]),
                Event("Нашёл забытый спрайт", [
                    Action("Использовать спрайт", "Ты использовал старый спрайт, и он идеально вписался в проект. (Готовность +8, Сплоченность +5)", State(0, 0, 8, 0, 5)),
                    Action("Доработать спрайт", "Ты доработал старый спрайт, и он стал ещё лучше. (Готовность +10, Вероятность багов -2)", State(0, 0, 10, -2, 0)),
                    Action("Показать команде", "Ты показал команде старый спрайт, и все были в восторге. (Готовность +5, Сплоченность +10)", State(0, 0, 5, 0, 10)),
                    Action("Не использовать спрайт", "Ты решил, что старый спрайт лучше оставить в прошлом. (Отчаяние -2)", State(-2, 0, 0, 0, 0))
                ]),
                Event("Музыка вдохновила", [
                    Action("Использовать идеи", "Ты использовал идеи, которые пришли под музыку, и проект стал лучше. (Готовность +10, Отчаяние -5)", State(0, 0, 10, -5, 0)),
                    Action("Записать идеи", "Ты записал идеи, чтобы не забыть их потом. (Готовность +5, Отчаяние -3)", State(0, 0, 5, -3, 0)),
                    Action("Поделиться с командой", "Ты поделился идеями с командой, и все были в восторге. (Готовность +8, Сплоченность +5)", State(0, 0, 8, 0, 5)),
                    Action("Продолжить слушать музыку", "Ты решил продолжить слушать музыку, чтобы не терять вдохновение. (Отчаяние -5)", State(-5, 0, 0, 0, 0))
                ]),
                Event("Команда поддержала", [
                    Action("Поблагодарить команду", "Ты поблагодарил команду за поддержку, и все были рады. (Отчаяние -10, Сплоченность +10)", State(-10, 0, 0, 0, 10)),
                    Action("Сосредоточиться на работе", "Ты решил сосредоточиться на работе, чтобы не разочаровать команду. (Отчаяние -5, Готовность +5)", State(-5, 0, 5, 0, 0)),
                    Action("Устроить перерыв", "Ты решил устроить перерыв, чтобы отпраздновать поддержку команды. (Отчаяние -5, Энергия +5)", State(-5, 5, 0, 0, 0)),
                    Action("Игнорировать поддержку", "Ты решил, что поддержка команды — это просто слова, и продолжил работать. (Отчаяние -2)", State(-2, 0, 0, 0, 0))
                ]),
                Event("Случайно починил баг", [
                    Action("Продолжить работу", "Ты продолжил работать, надеясь, что баг больше не вернётся. (Готовность +8, Вероятность багов -5)", State(0, 0, 8, -5, 0)),
                    Action("Изучить, как починил", "Ты решил разобраться, как удалось починить баг, и нашёл несколько ошибок. (Готовность +5, Вероятность багов -10)", State(0, 0, 5, -10, 0)),
                    Action("Рассказать команде", "Ты рассказал команде, как случайно починил баг, и все были удивлены. (Готовность +5, Сплоченность +5)", State(0, 0, 5, 0, 5)),
                    Action("Не трогать код", "Ты решил не трогать код, чтобы не сглазить. (Вероятность багов -3)", State(0, 0, 0, -3, 0))
                ]),
                Event("Нашёл идеальный туториал", [
                    Action("Следовать туториалу", "Ты следовал туториалу и решил все проблемы с кодом. (Готовность +12, Вероятность багов -5)", State(0, 0, 12, -5, 0)),
                    Action("Адаптировать туториал", "Ты адаптировал туториал под свой проект и нашёл несколько новых решений. (Готовность +10, Вероятность багов -3)", State(0, 0, 10, -3, 0)),
                    Action("Поделиться с командой", "Ты поделился туториалом с командой, и все были благодарны. (Готовность +8, Сплоченность +5)", State(0, 0, 8, 0, 5)),
                    Action("Игнорировать туториал", "Ты решил, что туториал — это просто видео, и продолжил работать. (Вероятность багов -2)", State(0, 0, 0, -2, 0))
                ]),
                Event("Получил похвалу от друга", [
                    Action("Поблагодарить друга", "Ты поблагодарил друга за похвалу и почувствовал прилив сил. (Отчаяние -10, Сплоченность +5)", State(-10, 0, 0, 0, 5)),
                    Action("Продолжить работу", "Ты решил продолжить работу, чтобы не разочаровать друга. (Отчаяние -5, Готовность +5)", State(-5, 0, 5, 0, 0)),
                    Action("Поделиться с командой", "Ты поделился похвалой друга с командой, и все были рады. (Отчаяние -8, Сплоченность +8)", State(-8, 0, 0, 0, 8)),
                    Action("Игнорировать похвалу", "Ты решил, что похвала друга — это просто слова, и продолжил работать. (Отчаяние -2)", State(-2, 0, 0, 0, 0))
                ])
            ]
            self.debuff = [
                Event("Unity снова обновился", [
                    Action("Откатить обновление", "Ты решил откатить обновление, но проект всё равно сломался. (Готовность -5, Вероятность багов +5)", State(0, 0, -5, 5, 0)),
                    Action("Адаптировать проект", "Ты попытался адаптировать проект под новое обновление, но это заняло много времени. (Готовность -10, Вероятность багов +10)", State(0, 0, -10, 10, 0)),
                    Action("Попросить помощи у команды", "Ты попросил помощи у команды, и вместе вы починили проект. (Готовность -8, Сплоченность +5)", State(0, 0, -8, 0, 5)),
                    Action("Не трогать проект", "Ты решил не трогать проект, надеясь, что всё само собой наладится. (Отчаяние +5)", State(5, 0, 0, 0, 0))
                ]),
                Event("Кофе закончился", [
                    Action("Купить кофе", "Ты сходил за кофе, но это отняло много времени. (Энергия -5, Отчаяние +5)", State(5, -5, 0, 0, 0)),
                    Action("Заварить чай", "Ты решил заварить чай вместо кофе и немного успокоился. (Энергия +5, Отчаяние -2)", State(-2, 5, 0, 0, 0)),
                    Action("Попросить кофе у команды", "Ты попросил кофе у команды, и кто-то поделился с тобой. (Энергия -3, Сплоченность +5)", State(0, -3, 0, 0, 5)),
                    Action("Работать без кофе", "Ты решил работать без кофе, но это было очень тяжело. (Отчаяние +10, Энергия -5)", State(10, -5, 0, 0, 0))
                ]),
                Event("Случайно удалил билд", [
                    Action("Восстановить из копии", "Ты восстановил билд из резервной копии, но это заняло время. (Готовность -5, Отчаяние +5)", State(5, 0, -5, 0, 0)),
                    Action("Переделать билд", "Ты решил переделать билд с нуля, и это заняло много времени. (Готовность -10, Отчаяние +10)", State(10, 0, -10, 0, 0)),
                    Action("Попросить помощи", "Ты попросил помощи у команды, и вместе вы восстановили билд. (Готовность -8, Сплоченность +5)", State(0, 0, -8, 0, 5)),
                    Action("Не трогать проект", "Ты решил не трогать проект, надеясь, что всё само собой наладится. (Отчаяние +5)", State(5, 0, 0, 0, 0))
                ]),
                Event("Сосед начал сверлить", [
                    Action("Надеть наушники", "Ты надел наушники, чтобы не слышать шум, но это отвлекало. (Энергия -3, Отчаяние +5)", State(5, -3, 0, 0, 0)),
                    Action("Попросить соседа остановиться", "Ты попросил соседа остановиться, но он не услышал. (Отчаяние +5, Энергия -5)", State(5, -5, 0, 0, 0)),
                    Action("Пожаловаться команде", "Ты пожаловался команде на шум, и все сочувствовали тебе. (Отчаяние +5, Сплоченность +5)", State(5, 0, 0, 0, 5)),
                    Action("Игнорировать шум", "Ты решил игнорировать шум, но это было очень тяжело. (Отчаяние +8)", State(8, 0, 0, 0, 0))
                ]),
                Event("Завис Photoshop", [
                    Action("Перезапустить программу", "Ты перезапустил Photoshop, но это отняло много времени. (Готовность -5, Отчаяние +5)", State(5, 0, -5, 0, 0)),
                    Action("Попробовать другой софт", "Ты решил попробовать другой софт, но это заняло много времени. (Готовность -8, Отчаяние +8)", State(8, 0, -8, 0, 0)),
                    Action("Попросить помощи у команды", "Ты попросил помощи у команды, и вместе вы починили Photoshop. (Готовность -5, Сплоченность +5)", State(0, 0, -5, 0, 5)),
                    Action("Ждать, пока отвиснет", "Ты решил ждать, пока Photoshop отвиснет, но это было очень тяжело. (Отчаяние +10)", State(10, 0, 0, 0, 0))
                ]),
                Event("Папа зашёл в комнату", [
                    Action("Объяснить, что занят", "Ты объяснил папе, что занят, но он не понял. (Отчаяние +5, Сплоченность -2)", State(5, 0, 0, 0, -2)),
                    Action("Игнорировать вопрос", "Ты решил игнорировать вопрос, но это было очень тяжело. (Отчаяние +8)", State(8, 0, 0, 0, 0)),
                    Action("Попросить поддержку у команды", "Ты попросил поддержки у команды, и все сочувствовали тебе. (Отчаяние +5, Сплоченность +5)", State(5, 0, 0, 0, 5)),
                    Action("Уйти из комнаты", "Ты решил уйти из комнаты, чтобы не слышать вопросов. (Энергия -5, Отчаяние +5)", State(5, -5, 0, 0, 0))
                ]),
                Event("Discord внезапно перестал работать", [
                    Action("Использовать другой мессенджер", "Ты решил использовать другой мессенджер, но это было неудобно. (Сплоченность -3, Отчаяние +5)", State(5, 0, 0, 0, -3)),
                    Action("Ждать восстановления", "Ты решил ждать, пока Discord восстановится, но это было очень тяжело. (Отчаяние +8)", State(8, 0, 0, 0, 0)),
                    Action("Работать в одиночку", "Ты решил работать в одиночку, но это было неэффективно. (Сплоченность -5, Готовность +5)", State(0, 0, 5, 0, -5)),
                    Action("Позвонить команде", "Ты решил позвонить команде, чтобы обсудить проблему. (Сплоченность +5, Энергия -3)", State(0, -3, 0, 0, 5))
                ]),
                Event("Пельмени убежали", [
                    Action("Заказать еду", "Ты заказал еду, но это отняло много времени. (Энергия -5, Отчаяние +5)", State(5, -5, 0, 0, 0)),
                    Action("Поесть что-то другое", "Ты решил поесть что-то другое, и это немного успокоило. (Энергия -3, Отчаяние -2)", State(-2, -3, 0, 0, 0)),
                    Action("Поделиться с командой", "Ты поделился с командой, что пельмени убежали, и все сочувствовали тебе. (Сплоченность +5, Энергия -3)", State(0, -3, 0, 0, 5)),
                    Action("Работать голодным", "Ты решил работать голодным, но это было очень тяжело. (Отчаяние +8, Энергия -5)", State(8, -5, 0, 0, 0))
                ]),
                Event("Переустановил движок", [
                    Action("Начать заново", "Ты решил начать проект заново, но это заняло много времени. (Готовность -10, Отчаяние +10)", State(10, 0, -10, 0, 0)),
                    Action("Восстановить проект", "Ты решил восстановить проект, но это заняло время. (Готовность -5, Отчаяние +5)", State(5, 0, -5, 0, 0)),
                    Action("Попросить помощи", "Ты попросил помощи у команды, и вместе вы восстановили проект. (Готовность -8, Сплоченность +5)", State(0, 0, -8, 0, 5)),
                    Action("Не трогать проект", "Ты решил не трогать проект, надеясь, что всё само собой наладится. (Отчаяние +5)", State(5, 0, 0, 0, 0))
                ]),
                Event("Чат GPT посоветовал переделать всё", [
                    Action("Следовать совету", "Ты решил следовать совету ChatGPT и переделать всё с нуля. (Готовность -15, Отчаяние +15)", State(15, 0, -15, 0, 0)),
                    Action("Игнорировать совет", "Ты решил игнорировать совет ChatGPT и продолжить работать. (Отчаяние -5)", State(-5, 0, 0, 0, 0)),
                    Action("Обсудить с командой", "Ты обсудил совет ChatGPT с командой, и все согласились, что это слишком. (Готовность -10, Сплоченность +5)", State(0, 0, -10, 0, 5)),
                    Action("Переделать часть проекта", "Ты решил переделать часть проекта, но это заняло много времени. (Готовность -8, Отчаяние +8)", State(8, 0, -8, 0, 0))
                ]),
                Event("Сделал шейдер, но он как чёрная дыра", [
                    Action("Оставить шейдер", "Ты решил оставить шейдер, но это добавило много багов. (Готовность +5, Вероятность багов +10)", State(0, 0, 5, 10, 0)),
                    Action("Удалить шейдер", "Ты решил удалить шейдер, и это уменьшило количество багов. (Готовность -5, Вероятность багов -5)", State(0, 0, -5, -5, 0)),
                    Action("Попросить помощи", "Ты попросил помощи у команды, и вместе вы исправили шейдер. (Сплоченность +5, Вероятность багов +5)", State(0, 0, 0, 5, 5)),
                    Action("Переделать шейдер", "Ты решил переделать шейдер, но это заняло много времени. (Готовность -3, Отчаяние +8)", State(8, 0, -3, 0, 0))
                ]),
                Event("Проверил Twitter", [
                    Action("Вдохновиться чужими работами", "Ты вдохновился чужими работами, но это добавило отчаяния. (Готовность +5, Отчаяние +5)", State(5, 0, 5, 0, 0)),
                    Action("Закрыть Twitter", "Ты решил закрыть Twitter, чтобы не отвлекаться. (Отчаяние -5)", State(-5, 0, 0, 0, 0)),
                    Action("Пожаловаться команде", "Ты пожаловался команде на то, что все делают пиксель-арт лучше. (Сплоченность +5, Отчаяние +5)", State(5, 0, 0, 0, 5)),
                    Action("Сравнивать дальше", "Ты решил продолжить сравнивать свою работу с чужими, и это добавило отчаяния. (Отчаяние +8, Сплоченность -3)", State(8, 0, 0, 0, -3))
                ])
            ]

        # Достать событие из списка
        def getEvent(type: EventType) -> 'Event':
            if type is not None:
                return getGenericEvent(getattr(events, type.value), True)
            return None

    # Изменения в функции getGenericEvent для удаления события после выбора
    def getGenericEvent(collection: List, remove: bool):
        if collection:
            event = collection.pop(0) if remove else collection[0]
            return event
        return None
